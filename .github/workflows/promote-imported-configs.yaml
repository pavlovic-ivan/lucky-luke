name: Promote Imported Configs

on:
  pull_request:
    types: [closed]
    branches: [ prod, dev ]
    paths:
      - 'feature/github-repo-provisioning/importer_tmp_dir/**'

jobs:
  promote:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    environment: promote
    permissions:
      contents: write
    steps:
      - name: Generate a token
        uses: actions/create-github-app-token@v2
        id: generate-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: "G-Research"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ steps.generate-token.outputs.token }}
          ref: ${{ github.event.pull_request.merge_commit_sha }}

      - name: Configure git
        shell: bash
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Promote Sanitized Files
        working-directory: feature/github-repo-provisioning
        env:
          DEV_TARGETS: 'gr-oss-devops'
          PROD_TARGETS: 'G-Research armadaproject'
        run: |
          if [[ "${{ github.ref_name }}" == "dev" ]]; then
            IFS=' ' read -r -a targets <<< "${DEV_TARGETS}"
            target_env="dev"
          elif [[ "${{ github.ref_name }}" == "prod" ]]; then
            IFS=' ' read -r -a targets <<< "${PROD_TARGETS}"
            target_env="prod"
          else
            echo "Unsupported branch: ${{ github.ref_name }}"
            exit 1
          fi

          for org in "${targets[@]}"; do
            src="importer_tmp_dir/${org}"
            dst="repo_configs/${target_env}/${org}"
          
            if [[ -d "$src" ]]; then
              echo "Promoting configs from $src to $dst"
              mkdir -p "$dst"
          
              find "$src" -type f -name '*.yaml' | while read file; do
                yq '. |= ( with(select(.rulesets[] != null); .rulesets[] |= del(.id)) | with(select(.rulesets[] == null); .) )' -i $file
              done

              find "$src" -maxdepth 1 -type f \( -name "*.yaml" -o -name ".*.yaml" \) -print -exec mv {} "$dst" \;
              git add "$src" "$dst"
            else
              echo "Source dir $src not found, skipping"
            fi
          done

          git diff --cached --quiet || {
            date_suffix=$(date +%Y-%m-%d)
            git commit -m "Promote configs from PR #${{ github.event.pull_request.number }} on $date_suffix"
            git push origin "${{ github.ref_name }}"
          }